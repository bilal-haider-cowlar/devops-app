version: "3.7"

services:
  sqldb:
    image: mysql:8
    container_name: sqldb
    restart: always
    ports:
      - "${DB_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      devops-app:

  vernemq:
    container_name: vernemq
    image: vernemq/vernemq
    ports:
      - "${VERNEMQ_WSS_PORT}:8080"
      - "${VERNEMQ_MQTT_PORT}:1883"
    environment:
      - DOCKER_VERNEMQ_ACCEPT_EULA=yes
      - DOCKER_VERNEMQ_ALLOW_ANONYMOUS=on
      - DOCKER_VERNEMQ_LISTENER.tcp.allowed_protocol_versions=3,4,5
      - DOCKER_VERNEMQ_LISTENER.ws.allowed_protocol_versions=3,4,5
      - DOCKER_VERNEMQ_LISTENER.wss.allowed_protocol_versions=3,4,5
    volumes:
      - vernemq-data:/vernemq/data
    networks:
      devops-app:

  redis-db:
    container_name: redis-db
    command: valkey-server /usr/local/etc/valkey/valkey.conf --save 60 1 --loglevel warning
    image: valkey/valkey:7.2
    restart: always
    ports:
      - "${REDIS_PORT}:6379"

    volumes:
      - valkey-data:/data
      - ./valkey/users_acl:/etc/valkey
      - ./valkey/valkey_conf:/usr/local/etc/valkey

  adminer:
    image: adminer:4.8.1
    container_name: adminer
    restart: always
    ports:
      - ${ADMINER_HOST_PORT}:8080
    networks:
      devops-app:

  app:
    build: .
    container_name: node-app
    ports:
      - "${PORT}:5000"
    env_file:
      - .env
    depends_on:
      - redis-db
      - vernemq
      - sqldb

networks:
  devops-app:
    name: devops-app

volumes:
  mysql-data:
  vernemq-data:
  valkey-data:
